div.bang-card-tooltip {
  div.bang-card-tooltip-sizing {
    width:2*$cardW;
    height:2*$cardH;
    display:flex;
    justify-content: center;
    align-items: center;

    div.bang-card {
      transform:scale(2);
    }
  }
}

div.bang-card {
	position:relative;
	width:$cardW;
	height:$cardH;
  flex-shrink: 0;
	margin:5px;
  transition: transform .5s ease-in-out;
  transform-origin: 50% 50%;
  transform-style: preserve-3d;
  &.flipped {
    transform:rotateY(180deg);
  }
  &[data-type="back"] {
    transform:rotateY(180deg);
  }

  &.slide {
    z-index:1000;
    opacity: 1 !important;
  }

  &[data-type="empty"] {
    border:none !important;
    background:none !important;
    div {
      display:none;
    }
  }

  &.unselectable {
    opacity:0.5;
    cursor:not-allowed;
  }

  &.selectable {
    cursor:pointer;
    &:hover .card-front {
      transform:scale(1.05);
      transform-origin: center center;
    }
  }
  &.preselected, &.selected {
    .card-front {
      border: 2px solid red;
      margin-left:-2px;
      margin-top:-2px;
      border-radius: 10px;
      background-color: red;
    }
  }

  &.selected .card-front{
    transform:scale(1.05);
    transform-origin: center center;
  }

  .card-back, .card-front {
    position:absolute;
    top:0;
    left:0;
    width:100%;
    height:100%;
    backface-visibility: hidden;
    -webkit-backface-visibility:hidden;
  }

  .card-back {
    background-image:url("img/cardback.jpg");
    background-size:cover;
    transform: rotateY(180deg);
    border-radius:10px;
    z-index:2;
  }

  @each $card in $actions    { &[data-type="#{$card}"] .card-front { background-position:1 * 100% / 3 center; } }
  @each $card in $equipments { &[data-type="#{$card}"] .card-front { background-position:2 * 100% / 3 center; } }
  @each $card in $guns       { &[data-type="#{$card}"] .card-front { background-position:3 * 100% / 3 center; } }

  @for $i from 0 through $numberOfCards {
    &[data-type="#{$i}"] .card-background {
      background-position-x: ($i % 6) * 100% / 5;
      background-position-y: (($i - ($i % 6)) / 6) * 100% / 3;
    }
  }

  .card-front {
    background-image:url("img/card_borders.png");
    background-size:cover;

    .card-name {
    	position:absolute;
    	top: 12 * $cardH / 200;
    	width: 100%;
    	height: $cardH / 5;
    	text-align: center;
    	font-family: "Perdido";
    	font-size: $cardH * 17 / 200;
      letter-spacing: -1px;
      transform: scale(0.8,1.3);
      transform-origin: top center;
      text-transform: uppercase;
    }

    //TODO: remove when event graphics are available
    .card-description {
      font-size: 12px;
      text-align: center;
      margin: 60px 5px;
    }

    .card-background {
    	position:absolute;
    	top: $cardH * 42 / 200;
    	left: $cardW * 10 / 125;
    	width: $cardW * 105 / 125;
    	height: $cardH * 149 / 200;
    	background-image:url("img/card_backgrounds.jpg");
    	background-size:600% 400%;
    }

    .card-copy {
      position: absolute;
      bottom: -3px;
      left: 4px;
      font-size: $cardH / 10;
      text-shadow: 1px 1px 1px white, -1px -1px 1px white, -1px 1px 1px white, 1px -1px 1px white;

      .card-copy-color {
        margin-left:-2px;
      }
    }
  }
}

.card-copy-color {
  font-size:$cardH / 8;
  display: inline-grid;
}
.card-copy-color-override {
  font-size:$cardH / 8;
}

#logs_wrap {
  .card-copy-color,.card-color-override {
    font-size: 17px;
    margin-left: 1px;
  }
  .card-copy-color::after{
    left: 1.5px;
  }
}

.card-copy-color::after {
  grid-row: 1;
  grid-column: 1;
  position: relative;
  left: 2.5px;
  color: black;
  text-shadow: -1px -1px 2px white;
}
.card-copy-color::before {
  grid-row: 1;
  grid-column: 1;
}

@each $suitChar, $suit in $suits {
  $color: map-get($suit,'color');
  $icon: map-get($suit,'icon');

  .card-copy-color[data-color=#{$suitChar}]::before {
    content:$icon;
    color:$color;
  }

  .card-copy-color[data-color=#{$suitChar}]:not([data-color-override=#{$suitChar}]):not([data-color-override=""])::after {
    content: "/";
  }

  .card-copy-color-override[data-color-override=#{$suitChar}]:not([data-color=#{$suitChar}])::before {
    content:$icon;
    color:$color;
  }
}
